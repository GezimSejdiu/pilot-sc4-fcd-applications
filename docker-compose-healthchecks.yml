version: '2.1'
services:
    zookeeper:
        build:
            context: ./sc4-zookeeper
        image: bde2020/pilot-sc4-zookeeper
        hostname: zookeeper
        container_name: zookeeper
        environment:
            - MYID=1
        healthcheck:
            test: /healthcheck
            interval: 10s
            timeout: 3s
            retries: 2
        expose:
            - "2181"
        ports:
            - "2181:2181"
    kafka:
        build:
            context: ./sc4-kafka
        image: bde2020/pilot-sc4-kafka
        hostname: kafka
        container_name: kafka
        environment:
            - ZOOKEEPER_SERVERS=zookeeper:2181
            - INITIAL_TOPICS=taxi
        healthcheck:
            test: /healthcheck
            interval: 5s
            timeout: 3s
            retries: 2
        depends_on:
            zookeeper:
                condition: service_healthy
        expose:
            - "9092"
    namenode:
        image: bde2020/hadoop-namenode:1.1.0-hadoop2.7.1-java8
        hostname: namenode
        container_name: namenode
        environment:
              CSS_SOURCE: "hadoop"
              CLUSTER_NAME: test
              VIRTUAL_HOST: hdfs-namenode.big-data-europe.local
        env_file:
            - ./config/hadoop/hadoop.env
        volumes:
            - ./data/hadoop/namenode:/hadoop/dfs/name
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:50070"]
            interval: 5s
            timeout: 3s
            retries: 10
        expose:
            - "50070"
    datanode:
        image: bde2020/hadoop-datanode:1.1.0-hadoop2.7.1-java8
        hostname: datanode
        container_name: datanode
        environment:
              CSS_SOURCE: "hadoop"
              CLUSTER_NAME: test
              VIRTUAL_HOST: hdfs-datanode.big-data-europe.local
              VIRTUAL_PORT: "50075"
        env_file:
            - ./config/hadoop/hadoop.env
        volumes:
            - ./data/hadoop/datanode:/hadoop/dfs/data
        depends_on:
          namenode:
            condition: service_healthy
        expose:
            - "50075"
    resourcemanager:
        image: bde2020/hadoop-resourcemanager:1.1.0-hadoop2.7.1-java8
        hostname: resourcemanager
        container_name: resourcemanager
        expose:
            - "8031"
            - "8088"
        environment:
            VIRTUAL_HOST: hdfs-resourcemanager.demo.big-data-europe.local
            VIRTUAL_PORT: "8088"
            CSS_SOURCE: "hadoop-resource-manager"
        env_file:
            - ./config/hadoop/hadoop.env
        depends_on:
            namenode:
                condition: service_healthy
            datanode:
                condition: service_healthy
    historyserver:
        image: bde2020/hadoop-historyserver:1.1.0-hadoop2.7.1-java8
        hostname: historyserver
        container_name: historyserver
        volumes:
            - ./data/hadoop/historyserver:/hadoop/yarn/timeline
        env_file:
            - ./config/hadoop/hadoop.env
        environment:
            VIRTUAL_HOST: hdfs-historyserver.demo.big-data-europe.local
            VIRTUAL_PORT: "8188"
            CSS_SOURCE: "hadoop-history-server"
        depends_on:
            namenode:
              condition: service_healthy
            datanode:
              condition: service_healthy
    nodemanager:
        image: bde2020/hadoop-nodemanager:1.1.0-hadoop2.7.1-java8
        hostname: nodemanager
        container_name: nodemanager
        expose:
            - "8042"
        environment:
            VIRTUAL_HOST: hdfs-nodemanager.demo.big-data-europe.local
            VIRTUAL_PORT: "8042"
            CSS_SOURCE: "hadoop-node-manager"
        env_file:
            - ./config/hadoop/hadoop.env
        depends_on:
            namenode:
              condition: service_healthy
            datanode:
              condition: service_healthy
    filebrowser:
        image: bde2020/hdfs-filebrowser
        hostname: filebrowser
        container_name: filebrowser
        expose:
            - "8088"
        environment:
              NAMENODE_HOST: namenode
              VIRTUAL_HOST: hue.big-data-europe.local
              VIRTUAL_PORT: "8088"
        depends_on:
          namenode:
            condition: service_healthy
          datanode:
            condition: service_healthy
    flink-master:
        image: bde2020/flink-master:1.1.4-hadoop2.7
        hostname: flink-master
        container_name: flink-master
        expose:
              - "8081"
              - "8080"
        environment:
              CSS_SOURCE: "flink-dashboard"
              VIRTUAL_HOST: flink-master.big-data-europe.local
              VIRTUAL_PORT: "8081"
        volumes:
              - ./data/flink-master:/data
        env_file:
              - ./config/hadoop/hadoop.env
        depends_on:
            namenode:
                condition: service_healthy
            datanode:
                condition: service_healthy
        healthcheck:
              test: ["CMD", "curl", "-f", "http://localhost:8081"]
              interval: 5s
              timeout: 3s
              retries: 10
    flink-worker:
        image: bde2020/flink-worker:1.1.4-hadoop2.7
        hostname: flink-worker
        container_name: flink-worker
        environment:
              FLINK_MASTER_PORT_6123_TCP_ADDR: "flink-master"
              CSS_SOURCE: "flink-dashboard"
              VIRTUAL_HOST: flink-worker.big-data-europe.local
              VIRTUAL_PORT: "8080"
        depends_on:
            flink-master:
              condition: service_healthy
        healthcheck:
              test: ["CMD", "curl", "-f", "http://localhost:8080"]
              interval: 5s
              timeout: 3s
              retries: 10
    data-stub:
        image: earthquakesan/bigknob
        hostname: bigknob
        container_name: bigknob
        depends_on:
            namenode:
              condition: service_healthy
            datanode:
              condition: service_healthy
            flink-master:
              condition: service_healthy
            zookeeper:
              condition: service_healthy
            kafka:
              condition: service_healthy
        environment:
              VIRTUAL_HOST: bigknob.big-data-europe.local
              VIRTUAL_PORT: "8000"
    producer-job:
        build:
            context: .
            dockerfile: producer.dockerfile
        container_name: producer-job
        environment:
              HDFS_URL: hdfs://namenode:8020
        depends_on:
          data-stub:
            condition: service_healthy
    integratorui:
      image: bde2020/integrator-ui:latest
      hostname: integratorui
      container_name: integratorui
      volumes:
        - ./config/integrator:/app/config
      environment:
        VIRTUAL_HOST: demo.big-data-europe.local

    csswrapper:
      image: bde2020/nginx-proxy-with-css
      hostname: csswrapper
      container_name: csswrapper
      ports:
        - 80:80
      volumes:
        - /var/run/docker.sock:/tmp/docker.sock:ro
