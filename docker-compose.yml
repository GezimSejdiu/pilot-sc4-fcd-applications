version: '2.1'
services:
    zookeeper:
        # build:
        #     context: ./sc4-zookeeper
        # image: bde2020/pilot-sc4-zookeeper
        image: zookeeper-demo
        hostname: zookeeper
        container_name: zookeeper
        environment:
            - MYID=1
            - INIT_DAEMON_STEP=setup_zookeeper
            - ENABLE_INIT_DAEMON=true
            - INIT_DAEMON_BASE_URI=http://initdaemon
        expose:
            - "2181"
        ports:
            - "2181:2181"
        labels:
            - "logging=true"
        # networks:
        #     - pilot-sc4-net

    kafka:
        # build:
        #     context: ./sc4-kafka
        # image: bde2020/pilot-sc4-kafka
        image: kafka-demo
        hostname: kafka
        container_name: kafka
        environment:
            - ZOOKEEPER_SERVERS=zookeeper:2181
            - INITIAL_TOPICS=taxi
            - INIT_DAEMON_STEP=setup_kafka
            - ENABLE_INIT_DAEMON=true
            - INIT_DAEMON_BASE_URI=http://initdaemon
        depends_on:
            - zookeeper
        expose:
            - "9092"
        labels:
            - "logging=true"
        # networks:
        #     - pilot-sc4-net
           
    namenode:
      image: bde2020/hadoop-namenode:1.1.0-hadoop2.7.1-java8
      hostname: namenode
      container_name: namenode
      environment:
              CSS_SOURCE: "hadoop"
              CLUSTER_NAME: test
              INIT_DAEMON_STEP: "setup_hdfs"
              VIRTUAL_HOST: hdfs-namenode.big-data-europe.local
      env_file:
            - ./config/hadoop/hadoop.env
      volumes:
            - ./data/hadoop/namenode:/hadoop/dfs/name
      expose:
            - "50070"
      labels:
            - "logging=true"
      # networks:
      #       - pilot-sc4-net

    datanode:
        image: bde2020/hadoop-datanode:1.1.0-hadoop2.7.1-java8
        hostname: datanode
        container_name: datanode
        environment:
              CSS_SOURCE: "hadoop"
              VIRTUAL_HOST: hdfs-datanode.big-data-europe.local
              VIRTUAL_PORT: "50075"
        env_file:
            - ./config/hadoop/hadoop.env
        volumes:
            - ./data/hadoop/datanode:/hadoop/dfs/data
        depends_on:
            - namenode
        expose:
            - "50075"
        labels:
            - "logging=true"
        # networks:
        #     - pilot-sc4-net

    resourcemanager:
        image: bde2020/hadoop-resourcemanager:1.1.0-hadoop2.7.1-java8
        hostname: resourcemanager
        container_name: resourcemanager
        expose:
            - "8031"
            - "8088"
        environment:
            VIRTUAL_HOST: hdfs-resourcemanager.demo.big-data-europe.local
            VIRTUAL_PORT: "8088"
            CSS_SOURCE: "hadoop-resource-manager"
        env_file:
            - ./config/hadoop/hadoop.env
        depends_on:
              - namenode
              - datanode
        labels:
            - "logging=true"
        # networks:
        #       - pilot-sc4-net

    historyserver:
        image: bde2020/hadoop-historyserver:1.1.0-hadoop2.7.1-java8
        hostname: historyserver
        container_name: historyserver
        volumes:
            - ./data/hadoop/historyserver:/hadoop/yarn/timeline
        env_file:
            - ./config/hadoop/hadoop.env
        environment:
            VIRTUAL_HOST: hdfs-historyserver.demo.big-data-europe.local
            VIRTUAL_PORT: "8188"
            CSS_SOURCE: "hadoop-history-server"
        depends_on:
              - namenode
              - datanode
        labels:
            - "logging=true"
        # networks:
        #       - pilot-sc4-net

    nodemanager:
        image: bde2020/hadoop-nodemanager:1.1.0-hadoop2.7.1-java8
        hostname: nodemanager
        container_name: nodemanager
        expose:
            - "8042"
        environment:
            VIRTUAL_HOST: hdfs-nodemanager.demo.big-data-europe.local
            VIRTUAL_PORT: "8042"
            CSS_SOURCE: "hadoop-node-manager"
        env_file:
            - ./config/hadoop/hadoop.env
        depends_on:
              - namenode
              - datanode
        # networks:
        #       - pilot-sc4-net

    filebrowser:
        image: bde2020/hdfs-filebrowser:latest
        hostname: filebrowser
        container_name: filebrowser
        expose:
            - "8088"
        environment:
              NAMENODE_HOST: namenode
              VIRTUAL_HOST: hue.big-data-europe.local
              VIRTUAL_PORT: "8088"
        depends_on:
            - namenode
            - datanode
        # networks:
        #     - pilot-sc4-net

    flink-master:
        image: flink-master-demo #bde2020/flink-master:1.2.0-hadoop2.7
        hostname: "flink-master"
        container_name: "flink-master"
        expose:
              - "8081"
              - "8080"
        environment:
              CSS_SOURCE: "flink-dashboard"
              INIT_DAEMON_STEP: "setup_flink"
              VIRTUAL_HOST: flink-master.big-data-europe.local
              VIRTUAL_PORT: "8081"
        volumes:
              - ./data/flink-master:/data
        env_file:
              - ./config/hadoop/hadoop.env
        depends_on:
              - namenode
              - datanode
        # networks:
        #       - pilot-sc4-net

    flink-worker:
        image: flink-worker-demo #bde2020/flink-worker:1.2.0-hadoop2.7
        hostname: flink-worker
        container_name: flink-worker
        links:
              - flink-master
        environment:
              FLINK_MASTER_PORT_6123_TCP_ADDR: flink-master
              CSS_SOURCE: "flink-dashboard"
              VIRTUAL_HOST: flink-worker.big-data-europe.local
              VIRTUAL_PORT: "8080"
        depends_on:
              - flink-master
        # networks:
        #       - pilot-sc4-net

    flink-worker2:
        image: bde2020/flink-worker:latest
        hostname: flink-worker2
        container_name: flink-worker2
        environment:
              FLINK_MASTER_PORT_6123_TCP_ADDR: "flink-master"
              CSS_SOURCE: "flink-dashboard"
              VIRTUAL_HOST: flink-worker2.big-data-europe.local
              VIRTUAL_PORT: "8080"
        depends_on:
              - flink-master
        # networks:
        #       - pilot-sc4-net

    producer:
        # build:
        #     context: .
        #     dockerfile: sc4-producer.dockerfile
        image: producer-demo
        container_name: producer
        environment:
              HDFS_URL: hdfs://namenode:8020
              INIT_DAEMON_STEP: floating_producer
              FLINK_MASTER_PORT_6123_TCP_ADDR: flink-master
              FLINK_MASTER_PORT_6123_TCP_PORT: "6123"
        env_file:
              - ./config/hadoop/hadoop.env
        depends_on:
              - flink-master
        # networks:
        #       - pilot-sc4-net

    consumer:
        # build:
        #     context: .
        #     dockerfile: sc4-consumer.dockerfile
        image: consumer-demo
        container_name: consumer
        environment:
              HDFS_URL: hdfs://namenode:8020
              INIT_DAEMON_STEP: floating_consumer
              FLINK_MASTER_PORT_6123_TCP_ADDR: flink-master
              FLINK_MASTER_PORT_6123_TCP_PORT: "6123"
        env_file:
              - ./config/hadoop/hadoop.env
        depends_on:
              - flink-master
        # networks:
        #       - pilot-sc4-net

    monitor:
        image: bde2020/pipeline-monitor-frontend:0.1.0
        hostname: monitor
        container_name: monitor
        links:
            - identifier:backend
        depends_on:
            - identifier
        environment:
              VIRTUAL_HOST: monitor.big-data-europe.local
        # networks:
        #     - pilot-sc4-net

    identifier:
        image: semtech/mu-identifier:1.0.0
        hostname: identifier
        container_name: identifier
        # networks:
        #     - pilot-sc4-net
        labels:
            - "logging=true"

    dispatcher:
        image: semtech/mu-dispatcher:1.0.1
        hostname: dispatcher
        container_name: dispatcher
        volumes:
            - ./config:/config
        # networks:
        #     - pilot-sc4-net
        labels:
            - "logging=true"

    database:
        image: tenforce/virtuoso:1.0.0-virtuoso7.2.2
        hostname: database
        container_name: database
        environment:
            - SPARQL_UPDATE=true
            - DEFAULT_GRAPH=http://mu.semte.ch/application
            - VIRTUAL_HOST=virtuoso.big-data-europe.local
            - VIRTUAL_PORT=8890
        volumes:
            - ./data/database:/data
        # networks:
        #     - pilot-sc4-net
        ports:
            - 9980:8890
        labels:
            - "logging=true"

#     pipeline:
#         image: bde2020/mu-pipeline-service:0.1.0
#         hostname: pipeline
#         container_name: pipeline
#         networks:
#             - pilot-sc4-net

    initdaemon:
        image: bde2020/mu-init-daemon-service:0.1.0
        hostname: initdaemon
        container_name: initdaemon
#         networks:
#             - pilot-sc4-net

#     integratorui:
#         image: bde2020/integrator-ui:latest
#         hostname: integratorui
#         container_name: integratorui
#         volumes:
#             - ./config/integrator:/app/config
#         environment:
#             VIRTUAL_HOST: demo.big-data-europe.local
#         networks:
#             - pilot-sc4-net

#     csswrapper:
#         image: bde2020/nginx-proxy-with-css
#         hostname: csswrapper
#         container_name: csswrapper
#         ports:
#             - 80:80
#         volumes:
#             - /var/run/docker.sock:/tmp/docker.sock:ro
#         networks:
#             - pilot-sc4-net

# networks:
#   pilot-sc4-net:
#     external: true
